version: 2

jobs:
  test:
    docker:
      - image: circleci/node:6.10-browsers
      - image: mongo:3.2.13

    steps:
      - checkout
      - run: git submodule update --init

      - run:
          name: set-locale
          command: sudo apt-get install locales

      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}

      - run:
          name: install-meteor
          command: sh scripts/install-meteor.sh

      - run:
          name: create-dirs
          command: sh scripts/setup-dirs.sh

#      - run:
#          name: install-bcrypt
#          command: meteor npm install --save bcrypt

      - run:
          name: install-chimpy
          command: sudo npm install -g chimpy

      - run:
          name: install-selenium
          command: sudo npm install -g selenium-standalone

      - run:
          name: install-chimp-dependencies
          command: sh scripts/download-chimp-dependencies.sh

      - run:
          name: install-npm-dependencies
          command: npm install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ~/.npm
            - ~/.meteor

# Unit tests run
      - run:
          name: meteor-unit-tests
          command: npm run test:unit

# Integration tests run
      - run:
          name: start-meteor-app
          command: npm run start-ci
          background: true

      - run:
          name: wait-for-app
          command: sleep 120

      - run:
          name: 100-int-test-designs
          command: npm run chimp:int_server_des

      - run:
          name: 200-int-test-updates
          command: npm run chimp:int_server_du

      - run:
          name: 300-int-test-implementation
          command: npm run chimp:int_server_imp

      - run:
          name: 400-int-test-test-integration
          command: npm run chimp:int_server_test

      - run:
          name: 500-int-test-progress
          command: npm run chimp:int_server_prog

      - run:
          name: 600-int-test-progress
          command: npm run chimp:int_server_anom

      - run:
          name: 700-int-test-users
          command: npm run chimp:int_server_usr

      - run:
          name: 800-int-test-settings
          command: npm run chimp:int_server_set

      - run:
          name: 900-int-test-admin
          command: npm run chimp:int_server_adm

# Acceptance tests run
      - run:
          name: client-tests
          command: npm run chimp:int_client

      - run:
          name: acc-test-design
          command: npm run chimp:acc_des

# Unit test upload
      - run:
          name: upload-results - unit
          command: sh scripts/upload-test-results.sh unit_results.json

# Integration test upload
      - run:
          name: upload-results - integration designs
          command: sh scripts/upload-test-results.sh mocha_int_results_server_des.json

      - run:
          name: upload-results - integration design updates
          command: sh scripts/upload-test-results.sh mocha_int_results_server_du.json

      - run:
          name: upload-results - integration design implementation
          command: sh scripts/upload-test-results.sh mocha_int_results_server_imp.json

      - run:
          name: upload-results - integration test integration
          command: sh scripts/upload-test-results.sh mocha_int_results_server_test.json

      - run:
          name: upload-results - integration backlogs and progress
          command: sh scripts/upload-test-results.sh mocha_int_results_server_prog.json

      - run:
          name: upload-results - integration design anomalies
          command: sh scripts/upload-test-results.sh mocha_int_results_server_anom.json

      - run:
          name: upload-results - integration users
          command: sh scripts/upload-test-results.sh mocha_int_results_server_usr.json

      - run:
          name: upload-results - integration tools and settings
          command: sh scripts/upload-test-results.sh mocha_int_results_server_set.json

      - run:
          name: upload-results - integration admin
          command: sh scripts/upload-test-results.sh mocha_int_results_server_adm.json

      - run:
          name: upload-results - integration client
          command: sh scripts/upload-test-results.sh mocha_int_results_client.json

# Acceptance test upload
      - run:
          name: upload-results - acceptance designs
          command: sh scripts/upload-test-results.sh mocha_acc_results_des.json


workflows:
  version: 2
  build_test_upload:
    jobs:
      - test
